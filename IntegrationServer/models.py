from pydantic import BaseModel
from datetime import datetime
from typing import Optional, List


class MetadataAsset(BaseModel):
    audited: Optional[str]
    audited_by: Optional[str]
    audited_date: Optional[datetime]
    institution: Optional[str]
    collection: Optional[str]
    barcode: Optional[str]
    specimen_pid: Optional[str]
    date_asset_created: Optional[datetime]
    date_asset_deleted: Optional[datetime]
    date_asset_updated: Optional[List[datetime]]
    date_metadata_created: Optional[datetime]
    date_metadata_updated: Optional[List[datetime]]
    asset_created_by: Optional[str]
    asset_deleted_by: Optional[str]
    asset_updated_by: Optional[List[str]]
    metadata_created_by: Optional[str]
    metadata_updated_by: Optional[List[str]]
    digitiser: Optional[str]
    restricted_access: Optional[List[str]]
    external_publisher: Optional[List[str]]
    file_format: Optional[List[str]]
    payload_type: Optional[str]
    asset_subject: Optional[str]
    funding: Optional[str]
    asset_guid: Optional[str]
    asset_pid: Optional[str]
    multispecimen: Optional[bool]
    other_multispecimen: Optional[List[str]]
    tags: Optional[List[str]]
    asset_taken_date: Optional[datetime]
    original_parent: Optional[str]
    parent: Optional[str]
    pipeline_name: Optional[str]
    preparation_type: Optional[str]
    workstation_name: Optional[str]
    original_specify_media_name: Optional[str]
    specify_attachment_id: Optional[str]
    pushed_to_specify_date: Optional[datetime]
    related_media: Optional[List[str]]
    status: Optional[str]
    asset_locked: Optional[str]
    storage_location: Optional[str]
    taxon_name: Optional[str]
    type_status: Optional[str]
    geographic_region: Optional[str]
    ocr_text: Optional[str]
    specimen_storage_location: Optional[str]
    CREATED_BY: Optional[str]
    media_guid: Optional[str]
